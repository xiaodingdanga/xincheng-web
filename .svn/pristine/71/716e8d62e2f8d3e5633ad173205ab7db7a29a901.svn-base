<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.xincheng.dao.CustomerDao">
	<!-- 使用二级缓存
	<cache/> -->
	<!-- table表-->
	<sql id="table">
		customer
	</sql>
	<!-- column列 -->
	<sql id="column">
		id,name,tel,address,remark,isdel,isIP,sort
	</sql>
	<!-- 根据账号查询实例 -->
	<select id="findAll" resultType="map" parameterType="String" useCache="true" flushCache="false" timeout="10000">
		select <include refid="column"/> from <include refid="table"/> as c
		where c.isdel!='1'
	</select>
	<select id="getByName" resultType="map" parameterType="String" useCache="true" flushCache="false" timeout="10000">
		select <include refid="column"/> from <include refid="table"/> 
		<where>
			name=#{name}
		</where>
	</select>
	<!-- 根据ID查询实例 -->
	<select id="findById" resultType="map" parameterType="String" useCache="true" flushCache="false" timeout="10000">
		select <include refid="column"/> from <include refid="table"/>
		<where>
			id=#{id} and isdel!='1'  
		</where>
	</select>
	<!-- 根据条件查询 -->
	<!-- resultType 数据中元素类型如返回list,内容为map -->
	<select id="findPageByParam" resultType="map" useCache="true" flushCache="false" timeout="10000">
		select <include refid="column"/> from <include refid="table"/>
		<where>
			<if test="name!=null and name!=''">
				and name like CONCAT('%',#{name},'%')
			</if>
			<if test="tel!=null and tel!=''">
				and tel like CONCAT('%',#{tel},'%')
			</if>
			<if test="address!=null and address!=''">
				and address like CONCAT('%',#{address},'%')
			</if>
			and isdel!='1'  
		</where>
		ORDER BY sort asc 
		limit #{start},#{pageSize}
	</select>
	<!-- 根据条件查询总数 -->
	<select id="getCountByParam" resultType="int" useCache="true" flushCache="false" timeout="10000">
		select count(DISTINCT id) from <include refid="table"/>
		<where>
			<if test="name!=null and name!=''">
				and name like CONCAT('%',#{name},'%')
			</if>
			<if test="tel!=null and tel!=''">
				and tel like CONCAT('%',#{tel},'%')
			</if>
			<if test="address!=null and address!=''">
				and address like CONCAT('%',#{address},'%')
			</if>
			and isdel!='1'
		</where>
	</select>
	<!-- 验证账号是否重复 -->
	<select id="checkName" resultType="boolean" parameterType="map" useCache="true" flushCache="false" timeout="10000">
		select count(DISTINCT id) as count from <include refid="table"/>
		<where>
    		<if test="id!=null and id!=''">
    			id!=#{id}
    		</if>
    		<if test="name!=null and name!=''">
    			and name=#{name}  
    		</if>
    	</where>
	</select>
	<!-- 获取排序最大值 -->
	<select id="getMaxSort" resultType="int" useCache="true" flushCache="false" timeout="10000">
		select IFNULL(MAX(sort),0) as max from <include refid="table"/>
	</select>
	<!-- 保存 -->
	<insert id="save" parameterType="map" flushCache="true" timeout="20000">
    	insert into <include refid="table"/>(<include refid="column"/>) 
    	values(#{id},#{name},#{tel},#{address},#{remark},#{isdel},#{isIP},#{sort})   
    </insert>
	<!-- 修改 -->
	<update id="update" parameterType="map" flushCache="true" timeout="20000">    
    	update <include refid="table"/>
    	<set>
			name=#{name},
			tel=#{tel},
			address=#{address},
			remark=#{remark},
			isdel=#{isdel},
			isIP=#{isIP},
			sort=#{sort},
		</set>
    	where id=#{id}
    	and isdel!='1'
    </update>
	<!-- 根据用户ID批量删除 -->
    <delete id="batchDelete" parameterType="String" flushCache="true" timeout="20000">
        delete from <include refid="table"/> where id in 
        <foreach collection="array" index="index" item="item" open="(" separator="," close=")">         
        	#{item}  
        </foreach>
    </delete>
    <!-- 根据用户ID删除 -->
    <delete id="delete" parameterType="String" flushCache="true" timeout="20000">
        delete from <include refid="table"/> where id=#{id}
    </delete>
    <!-- 批量保存 -->
	<insert id="batchSave" parameterType="list" flushCache="true" timeout="20000"> 
		insert into <include refid="table"/>(<include refid="column"/>) values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.id},#{item.name},#{item.tel},#{item.address},#{item.remark},#{item.isdel},#{item.isIP},#{item.sort})
		</foreach>
    </insert>
	 <!-- 根据条件查询总数 -->
	<select id="findIPByCustomerId" resultType="map" parameterType="String" useCache="true" flushCache="false" timeout="10000">
		select i.id,i.customerid,i.ip,c.name as customername
		from ip as i
		left  join <include refid="table"/> as c on i.customerid=c.id
		where i.customerid=#{customerid}
	</select>
	<!-- 保存加油站的有类型 -->
	<insert id="oilSave" parameterType="map" flushCache="true" timeout="20000">
    	insert into customer_oil_relation(id,oilid,customerid,state) 
    	values(#{id},#{oilid},#{customerid},#{state}) 
    </insert>
    <!-- 批量保存 -->
	<insert id="batchOilSave" parameterType="list" flushCache="true" timeout="20000"> 
		insert into <include refid="table"/>(<include refid="column"/>) values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.id},#{item.oilid},#{item.customerid},#{item.state})
		</foreach>
    </insert>
    <select id="findOilTypeByCustomerId" resultType="map" parameterType="String" useCache="true" flushCache="false" timeout="10000">
		select cor.id,cor.customerid,cor.oilid,o.name as oilname
		from customer_oil_relation as cor
		left  join oil as o on cor.oilid=o.id
		where cor.customerid=#{customerid} and cor.state=#{state}
	</select>
</mapper>  