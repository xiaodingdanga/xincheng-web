package com.xincheng.web.controller.system;

import java.lang.reflect.Member;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.apache.poi.ss.usermodel.charts.ManuallyPositionable;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.alibaba.fastjson.JSONObject;
import com.xincheng.service.system.BackcardService;
import com.xincheng.service.system.ConsumptionService;
import com.xincheng.service.system.MemberService;
import com.xincheng.service.system.ProportionService;
import com.xincheng.service.system.RechargeService;
import com.xincheng.web.controller.BaseController;

@Controller
@RequestMapping(value="/consumption")
public class ConsumptionController extends BaseController{
	Logger log = LogManager.getLogger(ConsumptionController.class.getName());
	
	@Resource
	private ConsumptionService consumptionService;
	
	/**
	 * 管理首页
	 * @param request
	 * @param modal
	 * @return
	 */
	@RequestMapping(value="/main")
	public ModelAndView main(HttpServletRequest request,Model modal){
		return new ModelAndView("modules/consumption/main");
	}
	/**
	 * 读卡
	 * @param request
	 * @param modal
	 * @return
	 */
	@RequestMapping(value="/read",produces={"text/json;charset=UTF-8"})
	public @ResponseBody String read(HttpServletRequest request,Model modal){
		Map<String ,Object> paramap = this.getParameter();
		paramap = consumptionService.readCardInfo(paramap);
		if(paramap!=null){
			String state =paramap.get("state").toString();
			if(state.equals("1")){
				paramap.put("code","此卡未绑定！");
				paramap.put("flag","1");
			}else{
				String isuse = paramap.get("isuse").toString();
				if(isuse.equals("1")){
					paramap.put("code","此卡已被停用！");
					paramap.put("flag","2");
				}else{
					paramap.put("flag","0");
					paramap.put("code","");
				}
			}
		}else{
			JSONObject json =new JSONObject();
			json.put("code","此卡未激活！");
			json.put("flag","3");
			return json.toJSONString();
		}
		JSONObject json =new JSONObject(paramap);
		String data = json.toJSONString();
		return data;
	}
	/**
	 * 下订单
	 * @param request
	 * @param modal
	 */
	@RequestMapping(value="/saveorder",produces={"text/json;charset=UTF-8"})
	public @ResponseBody String saveorder(HttpServletRequest request,Model modal){
		String data="";
		Map<String,Object> paramap=this.getParameter();
		data = consumptionService.saveorder(paramap);
		return data;
	}
	
	public static void main(String[] args) {
		 float   a  =   123.2334f; 
	      float  b   =  (float)(Math.round(a*100))/100;
	      System.out.println(b);
	}
}
